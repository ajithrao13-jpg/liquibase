stages:
  - rollback

variables:
variables:
  RB_TAG:
    value: ""
    description: "Liquibase rollback target tag. Specify the database tag you want to roll back to (e.g., 'v1.0.0')."

  RB_LABEL:
    value: ""
    description: "Liquibase label filter for rollback. Specify the label to filter changesets during rollback (e.g., 'production')."

  RB_CMD:
    value: ""
    description: "Custom Liquibase rollback command. Optionally provide a full Liquibase rollback command (e.g., 'rollbackCount 2', 'rollbackToDate 2023-01-01'). Overrides RB_TAG and RB_LABEL."

liquibase_custom_rollback:
  stage: rollback
  image: liquibase/liquibase:5.0.1
  when: manual
  script:
    - |
      set -euo pipefail

      # If RB_CMD provided, run it literally (useful for custom rollbackCount/rollbackToDate/rollbackSQL)
      if [ -n "${RB_CMD:-}" ]; then
        echo "Executing provided Liquibase command: liquibase $RB_CMD"
        # Recommended: require user to include any connection flags or defaultsFile in RB_CMD or set CI vars
        liquibase $RB_CMD
        exit $?
      fi

      # If RB_TAG and RB_LABEL provided, run the canonical rollback command
      if [ -n "${RB_TAG:-}" ] && [ -n "${RB_LABEL:-}" ]; then
        echo "Executing Liquibase rollback to tag '$RB_TAG' with label filter '$RB_LABEL'"
        liquibase rollback --tag="$RB_TAG" --labelFilter="$RB_LABEL"
        exit $?
      fi

      # Fallback (should not happen because rules prevent job from appearing otherwise)
      echo "No RB_CMD, RB_TAG or RB_LABEL provided. Nothing to do."
      exit 0
